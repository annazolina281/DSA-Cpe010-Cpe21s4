#include<iostream>
using namespace std;

const size_t maxCap = 100;
int stack[maxCap]; // stack with max of 100 elements
int top = -1, i, newData;

void push();
void pop();
void Top();
bool isEmpty();

int main() {
    int choice;
    cout << "Enter number of max elements for new stack: ";
    cin >> i;
    
    while (true) {
        cout << "Stack Operations: " << endl;
        cout << "1. PUSH, 2. POP, 3. TOP, 4. isEMPTY" << endl;
        cin >> choice;
        
        switch (choice) {
            case 1: 
                push();
                break;
            case 2: 
                pop();
                break;
            case 3: 
                Top();
                break;
            case 4: 
                cout << (isEmpty() ? "Stack is Empty" : "Stack is not Empty") << endl;
                break;
            default: 
                cout << "Invalid Choice." << endl;
                break;
        }
    }
    return 0;
}

bool isEmpty() {
    return top == -1;
}

void push() {
    // Check if full -> if yes, return error
    if (top == i - 1) {
        cout << "Stack Overflow." << endl;
        return;
    }
    cout << "New Value: " << endl;
    cin >> newData;
    stack[++top] = newData;
}

void pop() {
    // Check if empty -> if yes, return error
    if (isEmpty()) {
        cout << "Stack Underflow." << endl;
        return;
    }
    // Display the top value
    cout << "Popping: " << stack[top] << endl;
    // Decrement top value from stack
    top--;
}

void Top() {
    if (isEmpty()) {
        cout << "Stack is Empty." << endl;
        return;
    }
    cout << "The element on the top of the stack is " << stack[top] << endl;
}
