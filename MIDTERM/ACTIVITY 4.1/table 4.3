#include <iostream>
using namespace std; // Use the standard namespace

class Node {
public:
    int data;
    Node *next;
};

Node *head = NULL, *tail = NULL;

void push(int newData) {
    Node *newNode = new Node;
    newNode->data = newData;
    newNode->next = head;

    if (head == NULL) {
        head = tail = newNode; // Initialize head and tail if stack is empty
    } else {
        newNode->next = head;
        head = newNode; // Update head to new node
    }
}

int pop() {
    int tempVal;
    Node *temp;
    if (head == NULL) {
        head = tail = NULL; // Reset head and tail if stack is empty
        cout << "Stack Underflow." << endl; // Error if empty
        return -1;
    } else {
        temp = head; // Get current head
        tempVal = temp->data; // Store data to return
        head = head->next; // Move head to next node
        delete(temp); // Free memory of old head
        return tempVal; // Return popped value
    }
}

void Top() {
    if (head == NULL) {
        cout << "Stack is Empty." << endl; // Inform if empty
        return;
    } else {
        cout << "Top of Stack: " << head->data << endl; // Show top item
    }
}

// Function to display all elements in the stack
void Display() {
    if (head == NULL) {
        cout << "Stack is Empty." << endl; // Inform if empty
        return;
    }
    
    Node *current = head; // Start from head
    cout << "Stack Elements: ";
    while (current != NULL) {
        cout << current->data << " "; // Print each element
        current = current->next; // Move to next node
    }
    cout << endl; // New line after displaying all elements
}

int main() {
    push(1);
    cout << "After the first PUSH, top of stack is: ";
    Top();
    Display(); // Call to display the elements

    push(5);
    cout << "After the second PUSH, top of stack is: ";
    Top();
    Display(); // Call to display the elements

    pop();
    cout << "After the first POP operation, top of stack is: ";
    Top();
    Display(); // Call to display the elements

    pop();
    cout << "After the second POP operation, top of stack is: ";
    Top();
    Display(); // Call to display the elements

    pop(); // Attempt to pop from an empty stack
    return 0;
}
